[comment encoding = UTF-8 /]
[module toDot('http://simplepdl')]

[comment Generation de la syntaxe PDL1 a partir d'un modele de processus /]

[template public toDot(aProcess : Process)]
[comment @main/]
[file (aProcess.name.concat('.dot'), false, 'UTF-8')]
digraph [aProcess.name/] {
[for (ws : WorkSequence | aProcess.processElements->getWSs())]
[ws.predecessor.name/] -> [ws.successor.name/] [ '[' /] arrowhead=vee label=[ws.getWSType()/] [ ']' /]
[/for]
}
[/file]
[/template]

[query public getWDs(elements : OrderedSet(ProcessElement)) : OrderedSet(WorkDefinition) = 
	elements->select( e | e.oclIsTypeOf(WorkDefinition) )
		->collect( e | e.oclAsType(WorkDefinition) )
		->asOrderedSet()
/]

[query public getWSs(elements : OrderedSet(ProcessElement)) : OrderedSet(WorkSequence) = 
	elements->select( e | e.oclIsTypeOf(WorkSequence) )
		->collect( e | e.oclAsType(WorkSequence) )
		->asOrderedSet()
/]

[template public getWSType(ws : WorkSequence)]
[if (ws.linkType = WorkSequenceType::startToStart)]
s2s[elseif (ws.linkType = WorkSequenceType::startToFinish)]
s2f[elseif (ws.linkType = WorkSequenceType::finishToStart)]
f2s[elseif (ws.linkType = WorkSequenceType::finishToFinish)]
f2f[/if]
[/template]


